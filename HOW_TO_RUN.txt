# Fashion Visual Search & Intelligent Styling Assistant

## How to Run

1. **Install dependencies**
   - Open a terminal in the project folder.
   - Run:
     ```
     pip install -r requirements.txt
     ```
   - If you don't have `requirements.txt`, install manually:
     ```
     pip install streamlit torch torchvision faiss-cpu pandas scikit-learn pillow tqdm
     ```

2. **Start the application**
   - In the terminal, run:
     ```
     streamlit run UI.py
     ```

3. **Usage**
   - The app will open in your browser.
   - Upload a dress or jeans image.
   - The system will show visually similar products, cross-category outfit recommendations, and personalized suggestions.

## Solution Design (Summary)
- **Visual Search:** Uses ResNet50 for image embeddings and FAISS for fast similarity search.
- **Outfit Recommendation:** Cross-category, color/trend aware, ordinal ranking.
- **Personalization:** Session-based, can be extended to user accounts.
- **Scalability:** Modular code, ready for API deployment (FastAPI/Flask), Dockerizable.

## Architecture Diagram

```
User ──> Streamlit UI ──> (Feature Extraction, Category Detection)
                        ├─> FAISS Visual Search (Dresses/Jeans)
                        ├─> Outfit Recommendation Engine
                        └─> Personalized Recommendation
Data: CSVs, Embeddings, Images
```

## Folder Structure

```
MLE Assignment/
├── UI.py
├── data_preprocessing.py
├── Feature_extraction.py
├── Visual_search_engine.py
├── Outfit_recommendation _engine.py
├── image_downloader.py
├── dresses_bd_processed_data.csv
├── jeans_bd_processed_data.csv
├── dresses_embeddings.npy
├── jeans_embeddings.npy
├── images/
│   ├── dresses/
│   └── jeans/
├── requirements.txt
├── README.md
└── HOW_TO_RUN.txt  <--- (this file)
```

## Contact
For questions or issues, contact the project owner.
